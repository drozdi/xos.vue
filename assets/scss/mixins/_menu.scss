@import "base";
@import "../vars/menu";

$enable-flex: false !default;

@mixin menu-link-style-border ($direction, $padding: null) {
  $menu_border: (none, none, none, none);
  $index: get-index-side($direction);
  $border: set-nth($menu_border, $index, $menu-side-border-width solid);
  @include item-size($border: $border, $padding: $padding, $border-props: width style);
}





// Базавая разметка и модификаторы
@mixin menu-direction ($dir: horizontal) {
  @if $dir == horizontal {
    @if $enable-flex {
      flex-direction: row;
    } @else {
      > li {
        display: table-cell !important;
      }
    }
  } @else if $dir == vertical {
    @if $enable-flex {
      &, & ul {
        flex-direction: column;
      }
    } @else {
      > li {
        display: block !important;
      }
    }
  } @else {
    @warn 'The direction used for menu-direction() must be horizontal or vertical.';
  }
}
@mixin menu-icons ($position: side, $margin: null) {
  @if $position == side {
    > li {
      > span, > a {
        > img, > i {
          @include inline-block;
          margin-right: $margin;
        }
      }
    }
  } @else if $position == top {
    align-items: center;
    > li {
      > span, > a {
        text-align: center;
        > img, > i {
          display: block;
          margin: if($margin, 0 auto $margin, null);
        }
      }
    }
  }
}




// Функции для оформления
@mixin menu-style (
  $color: null, $bg: null, $border: null,
  $hover-color:null, $hover-bg: null, $hover-border: null,
  $active-color: null, $active-bg: null, $active-border: null
) {
  > li {
    > a, > span {
      color: $color;
      background-color: $bg;
      @if $border and $border == none {
        border-color: transparent;
      } @else if $border and $border != auto {
        border-color: $border;
      }
    }
  }
  > li:not(.disabled) {
    @include hover-focus {
      color: $hover-color;
      background-color: $hover-bg;
      @if $hover-border and $hover-border == none {
        border-color: transparent;
      } @else if $hover-border and $hover-border != auto {
        border-color: $hover-border;
      }
    }
  }
  > li:not(.disabled) > a:active,
  > li:not(.disabled) > span:active,
  > li:not(.disabled).active > a,
  > li:not(.disabled).active > span {
    color: $active-color;
    background-color: $active-bg;
    @if $active-border and $active-border == none {
      border-color: transparent;
    } @else if $active-border and $active-border != auto {
      border-color: $active-border;
    }
  }
  > li.disabled {
    > a, > span {
      &, &:hover, &:focus {
        color: $color;
        background-color: $bg;
        @if $border and $border == none {
          border-color: transparent;
        } @else if $border and $border != auto {
          border-color: $border;
        }
      }
    }
  }
}

@mixin menu-style-border ($border: auto, $hover-border: auto, $active-border: auto,	$padding: null) {
  > li {
    > a, > span {
      @include item-size($border: $border, $padding: $padding, $border-props: width style);
      &:hover, &:focus {
        @include item-size($border: $hover-border, $padding: $padding, $border-props: width style);
      }
    }

    > a:active,
    > span:active,
    &.active > a,
    &.active > span {
      @include item-size($border: $active-border, $padding: $padding, $border-props: width style);
    }

    &.disabled {
      > a, > span {
        @include item-size($border: $border, $padding: $padding, $border-props: width style);
      }
    }
  }
}

// Оформление
@mixin menu-template (
  $color: null, $bg: null, $border: null,
  $hover-color: null, $hover-bg: null, $hover-border: null,
  $active-color: null, $active-bg: null, $active-border: null,
  $header-color: null, $header-bg: null, $divider-border: null,
  $nested-color: null, $nested-hover-color: null) {
  ul a {
    color: $nested-color;
    &:hover {
      color: $nested-hover-color;
    }
  }
  @include menu-style(
          $color: $color,
          $bg: $bg,
          $border: $border,
          $hover-color: $hover-color,
          $hover-bg: $hover-bg,
          $hover-border: $hover-border,
          $active-color: $active-color,
          $active-bg: $active-bg,
          $active-border: $active-border
  );
  li[role="heading"] {
    color: $header-color;
  }
  > li[role="heading"] {
    background-color: $header-bg;
  }
  li[role="separator"] {
    border-color: $divider-border;
  }
}
@mixin menu-template-default {
  @include menu-template(
          $color: $menu-link-color,
          $bg: $menu-link-bg,
          $border: $menu-link-border,
          $hover-color: $menu-link-hover-color,
          $hover-bg: $menu-link-hover-bg,
          $hover-border: $menu-link-hover-border,
          $active-color: $menu-link-active-color,
          $active-bg: $menu-link-active-bg,
          $active-border: $menu-link-active-border,
          $divider-border: $menu-divider-border,
          $header-color: $menu-header-color,
          $header-bg: null,
          $nested-color: $menu-nested-link-color,
          $nested-hover-color: $menu-nested-link-hover-color
  );
}
@mixin menu-template-side ($direction: null, $padding: null) {
  $menu_border: (none, none, none, none);
  $index: get-index-side($direction);
  @if $index {
    @include menu-style-border(
                    set-nth($menu_border, $index, $menu-side-border-width solid),
                    set-nth($menu_border, $index, $menu-side-border-width solid),
                    set-nth($menu_border, $index, $menu-side-border-width solid),
                    $padding
    );
  }
}
@mixin menu-template-pills {
  > li {
    > a, > span {
      @include item-size($border: 0.0625rem solid transparent, $padding: $menu-link-padding-y $menu-link-padding-x);
    }
    + li {
      margin-left: -1px;
    }
    &:first-child {
      > a, > span {
        @include border-left-radius($menu-pills-border-radius);
      }
    }
    &:last-child {
      > a, > span {
        @include border-right-radius($menu-pills-border-radius);
      }
    }
  }
  @include menu-style(
          $color: $menu-pills-color,
          $bg: $menu-pills-bg,
          $border: $menu-pills-border,
          $hover-color: $menu-pills-hover-color,
          $hover-bg: $menu-pills-hover-bg,
          $hover-border: $menu-pills-hover-border,
          $active-color: $menu-pills-active-color,
          $active-bg: $menu-pills-active-bg,
          $active-border: $menu-pills-active-border
  );
  > li > a:active,
  > li.active > a{
    @include box-shadow($menu-pills-active-shadow);
  }
  > li.active > a:active {
    @include box-shadow(none);
  }
  > li.disabled > a {
    &, &:hover, &:focus, &:active {
      @include box-shadow(none);
    }
  }
}
@mixin menu-template-offcanvas {
  @include menu-template(
          $color: $menu-offcanvas-color,
          $bg: $menu-offcanvas-bg,
          $border: $menu-offcanvas-border,
          $hover-color: $menu-offcanvas-hover-color,
          $hover-bg: $menu-offcanvas-hover-bg,
          $hover-border: $menu-offcanvas-hover-border,
          $active-color: $menu-offcanvas-active-color,
          $active-bg: $menu-offcanvas-active-bg,
          $active-border: $menu-offcanvas-active-border,
          $divider-border: $menu-offcanvas-divider-border,
          $header-color: $menu-offcanvas-header-color,
          $header-bg: $menu-offcanvas-header-bg,
          $nested-color: $menu-offcanvas-nested-color,
          $nested-hover-color: $menu-offcanvas-nested-hover-color
  );
  > li[role="separator"] {
    background: $menu-offcanvas-divider-border;
    margin: 0px;
    height: 4px;
  }
  > li,
  ul[role="group"] {
    border-top: 1px solid rgba(#000, 0.3);
    @include box-shadow(inset 0 1px 3px rgba(255, 255, 255, 0.05));
    text-shadow: 0 1px 0 rgba(#000, 0.5);
  }
}
